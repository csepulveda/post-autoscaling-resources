apiVersion: apps/v1
kind: Deployment
metadata:
  name: api-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: api
  template:
    metadata:
      labels:
        app: api
    spec:
      serviceAccountName: sqs-service-account
      containers:
        - name: api
          image:  ghcr.io/csepulveda/post-autoscaling-resources-api:main
          ports:
            - containerPort: 8080
          env:
            - name: QUEQUE_URL
              value: "https://sqs.us-east-1.amazonaws.com/489853078485/worker-input"

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: external-api-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: external-api
  template:
    metadata:
      labels:
        app: external-api
    spec:
      containers:
        - name: external-api
          image:  ghcr.io/csepulveda/post-autoscaling-resources-external-api:main
          imagePullPolicy: Always
          ports:
            - containerPort: 8080

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: worker-input-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: worker-input
  template:
    metadata:
      labels:
        app: worker-input
    spec:
      serviceAccountName: sqs-service-account
      containers:
        - name: worker-input
          image: ghcr.io/csepulveda/post-autoscaling-resources-worker-input:main
          imagePullPolicy: Always
          env:
            - name: INPUT_QUEQUE_URL
              value: "https://sqs.us-east-1.amazonaws.com/489853078485/worker-input"
            - name: OUTPUT_QUEQUE_URL
              value: "https://sqs.us-east-1.amazonaws.com/489853078485/worker-output"
            - name: FRACTAL_API_BASE_URL
              value: "http://external-api-service:8080"
          resources:
            requests:
              cpu: 200m
              memory: 32Mi
            limits:
              cpu: 300m
              memory: 64Mi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: worker-output-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: worker-output
  template:
    metadata:
      labels:
        app: worker-output
    spec:
      serviceAccountName: sqs-service-account
      containers:
        - name: worker-output
          image: ghcr.io/csepulveda/post-autoscaling-resources-worker-output:main
          imagePullPolicy: Always
          env:
            - name: OUTPUT_QUEQUE_URL
              value: "https://sqs.us-east-1.amazonaws.com/489853078485/worker-output"
          resources:
            requests:
              cpu: 400m
              memory: 64Mi
            limits:
              cpu: 500m
              memory: 128Mi

---
apiVersion: v1
kind: Service
metadata:
  name: api-service
spec:
  selector:
    app: api
  ports:
    - protocol: TCP
      port: 8080
      targetPort: 8080
  type: ClusterIP

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: api-service
  annotations:
    kubernetes.io/ingress.class: nginx
    cert-manager.io/cluster-issuer: letsencrypt
spec:
  rules:
    - host: api-service.csepulveda.net
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: api-service
                port:
                  number: 8080
  tls:
    - hosts:
        - api-service.csepulveda.net
      secretName: api-service-tls

---
apiVersion: v1
kind: Service
metadata:
  name: external-api-service
spec:
  selector:
    app: external-api
  ports:
    - protocol: TCP
      port: 8080
      targetPort: 8080
  type: ClusterIP

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: sqs-service-account
  annotations: {
    "eks.amazonaws.com/role-arn": "arn:aws:iam::489853078485:role/sqs-role"
  }